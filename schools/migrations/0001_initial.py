# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-04 13:31
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Avatar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=40, null=True)),
                ('file', models.BinaryField(db_column='file')),
            ],
            options={
                'db_table': 'avatar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cohort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(db_column='schoolYear')),
                ('stage', models.CharField(max_length=4)),
            ],
            options={
                'db_table': 'cohorts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'course',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('start_date', models.DateTimeField(db_column='startDate')),
                ('end_date', models.DateTimeField(db_column='endDate')),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('contact', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('all_day', models.IntegerField(blank=True, db_column='allDay', null=True)),
                ('created_at', models.DateTimeField(db_column='createdAt')),
                ('link', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FailedLogin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(blank=True, db_column='ipAddress', max_length=15, null=True)),
                ('user_agent', models.CharField(blank=True, db_column='userAgent', max_length=300, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'failed_login',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('access_code', models.CharField(blank=True, db_column='accessCode', max_length=8, null=True)),
            ],
            options={
                'db_table': 'groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupMembers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'group_members',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Noticeboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('text', models.TextField()),
                ('user_type', models.CharField(db_column='userType', max_length=1)),
                ('file_attached', models.CharField(blank=True, db_column='fileAttached', max_length=100, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.CharField(blank=True, max_length=50, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, db_column='expiryDate', null=True)),
            ],
            options={
                'db_table': 'noticeboard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NoticeboardClasses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'noticeboardclasses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NoticeboardFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('original_name', models.CharField(db_column='originalName', max_length=100)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=40, null=True)),
                ('file', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'noticeboard_files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PoliciesFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_id', models.CharField(db_column='resourceId', max_length=100)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'policies_files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PoliciesLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'policies_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.IntegerField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('title', models.CharField(max_length=100)),
                ('begin_date', models.DateTimeField(blank=True, db_column='beginDate', null=True)),
                ('end_date', models.DateTimeField(blank=True, db_column='endDate', null=True)),
            ],
            options={
                'db_table': 'policies_pages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RememberToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('token', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'db_table': 'remember_token',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_id', models.CharField(db_column='resourceId', max_length=100)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'resources',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'resource_property',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('school_id', models.AutoField(db_column='schoolID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='SchoolName', max_length=35)),
                ('address1', models.CharField(db_column='Address1', max_length=100)),
                ('address2', models.CharField(blank=True, db_column='Address2', max_length=100, null=True)),
                ('postcode', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(max_length=50)),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('head_teacher', models.IntegerField(blank=True, db_column='headTeacher', null=True)),
                ('access_code', models.CharField(blank=True, db_column='AccessCode', max_length=8, null=True)),
                ('teacher_accesscode', models.CharField(blank=True, db_column='TeacherAccessCode', max_length=8, null=True)),
                ('allty', models.IntegerField(blank=True, db_column='allTY', null=True)),
                ('client_id', models.CharField(blank=True, db_column='clientId', max_length=100, null=True)),
                ('language', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateField(blank=True, db_column='createdAt', null=True)),
                ('timezone', models.CharField(blank=True, max_length=50, null=True)),
                ('website', models.CharField(blank=True, max_length=100, null=True)),
                ('mission_statement', models.TextField(blank=True, db_column='missionStatement', null=True)),
            ],
            options={
                'db_table': 'schoolinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SchoolVendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendorid', models.CharField(blank=True, db_column='vendorId', max_length=30, null=True)),
                ('config', models.TextField()),
            ],
            options={
                'db_table': 'schoolvendors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SuccessLogin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(blank=True, db_column='ipAddress', max_length=15, null=True)),
                ('user_agent', models.CharField(blank=True, db_column='userAgent', max_length=300, null=True)),
                ('logged_at', models.DateTimeField(blank=True, db_column='loggedAt', null=True)),
            ],
            options={
                'db_table': 'success_login',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimetableChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'timetablechanges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimetableConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.CharField(blank=True, db_column='startTime', max_length=8, null=True)),
                ('end_time', models.CharField(blank=True, db_column='endTime', max_length=8, null=True)),
                ('preset', models.CharField(blank=True, db_column='Preset', max_length=20, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('week_day', models.IntegerField(blank=True, db_column='weekDay', null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('is_preset', models.IntegerField(blank=True, db_column='isPreset', null=True)),
            ],
            options={
                'db_table': 'timetableconfig',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimetableLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('timetable', models.IntegerField()),
            ],
            options={
                'db_table': 'timetable_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(db_column='userID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='FirstName', max_length=35)),
                ('last_name', models.CharField(db_column='LastName', max_length=35)),
                ('type', models.CharField(db_column='Type', max_length=1)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(max_length=60)),
                ('title', models.CharField(blank=True, max_length=4, null=True)),
                ('username', models.CharField(blank=True, max_length=60, null=True)),
                ('token', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('is_admin', models.IntegerField(blank=True, db_column='isAdmin', null=True)),
                ('created_at', models.DateField(blank=True, db_column='createdAt', null=True)),
                ('guardianaccesscode', models.CharField(blank=True, db_column='guardianAccessCode', max_length=8, null=True)),
                ('external_id', models.CharField(blank=True, db_column='externalId', max_length=100, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('token', models.CharField(blank=True, max_length=300, null=True)),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'user_token',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VendorToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updated_at', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('vendor', models.CharField(blank=True, max_length=100, null=True)),
                ('token', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'vendor_token',
                'managed': False,
            },
        ),
    ]
